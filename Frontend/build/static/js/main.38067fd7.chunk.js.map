{"version":3,"sources":["config/config.js","components/Navbar.js","components/SidebarFooter.js","components/Sidebar.js","components/LoadingIndicator.js","components/Input.js","components/Output.js","components/DispArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","apiAddress","Navbar","react_default","a","createElement","className","style","color","href","React","Component","SidebarFooter","aria-hidden","target","Sidebar","id","SidebarFooter_SidebarFooter","LoadingIndicator","props","usePromiseTracker","promiseInProgress","width","height","display","justifyContent","alignItems","react_loader_spinner_default","type","Input","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onImageChange","event","files","reader","FileReader","onload","e","setState","image","result","buttonText","isUp","isLoading","readAsDataURL","sendImage","hitAPIfunc","state","bind","assertThisInitialized","components_LoadingIndicator","fontSize","onClick","maxHeight","maxWidth","minxHeight","minWidth","src","onChange","accept","Output","status","statusProp","detections","detectionsProp","console","log","length","DispArea","hitAPI","stringAdjust","inputTaken","axios","get","config","then","res","window","alert","originalString","split","chosenImage","_this2","apiFetchURL","trackPromise","post","detectedImage","data","imstr","success","catch","err","serverErr","Output_Output","imstrProp","Input_Input","App","components_Navbar","Sidebar_Sidebar","DispArea_DispArea","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.38067fd7.chunk.js","sourcesContent":["module.exports = (\n    {\n/*          apiAddress: \"https://image-objects-detector-lite-77.herokuapp.com/\" */\n  apiAddress: \"http://127.0.0.1:8000/\" \n    }   \n);\n","import React from \"react\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav className=\"mycss-nbar\">\n          <span>\n            <a style={{ color:'#ffffff' }} href=\"/\">License Plate Recognition System</a>\n          </span>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport '../styling/css/sidebarfooter.css'\n\nexport default class SidebarFooter extends Component {\n    render() {\n        return (\n            <div className='sbar-footer-container'>\n\n                <div className=\"sbar-footer-begin\">\n                    <p>\n                        Made with <i className=\"icon-heart\" aria-hidden=\"true\"></i> by \n                        <a href=\"https://github.com/varnitmittal/LPR\" target=\"_blank\"> Team HEX-CLAN</a>\n                    </p>\n                </div>\n\n                <div className='sbar-footer-list'>\n                    <div className=\"sbar-footer-list-item\"><a href=\"#\"><i className=\"icon-facebook2\"></i></a></div>\n                    <div className=\"sbar-footer-list-item\"><a href=\"#\"><i className=\"icon-twitter2\"></i></a></div>\n                    <div className=\"sbar-footer-list-item\"><a href=\"#\"><i className=\"icon-instagram\"></i></a></div>\n                    <div className=\"sbar-footer-list-item\"><a href=\"#\"><i className=\"icon-linkedin2\"></i></a></div>\n                </div>\n\n                <p className='sbar-footer-end'>\n                    &copy; hex-clan | 2020\n                </p>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport SidebarFooter from './SidebarFooter';\nimport '../styling/css/sidebar.css'\n\nexport default class Sidebar extends Component {\n    render() {\n        return (\n            <div className=\"mycss-sbar\" /* style={{border: '4px solid red'}} */>\n                <div className=\"mycss-sbar-content\" /* style={{border: '4px solid green'}} */>\n                    <h2 id=\"\"><a href=\"/\">Recognizes license plate from images using deep learning convolutional neural network</a></h2>\n                    <h3 id=\"mycss-sbar-text\">\n                    Recognizes vehicular license plate numbers from images using deep learning convolutional neural network model trained on custom dataset.<br /> \n              Entire frontend is responsive and built with React.<br /> The images are processed on server-side and sent back as API response.<br /> \n              The API is built with Flask served by Gunicorn WSGI server and deployed to Heroku.\n                    </h3>\n                    <h4 id=\"mycss-sbar-text\"> The Developers: \n                        <ul>\n                            <li>Varnit Mittal</li>\n                            <li>Divyam Goyal</li>\n                            <li>Pulkit Jain</li>\n                            <li>Albin Joseph</li>\n                        </ul>\n                    </h4>\n                </div><SidebarFooter />\n           </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Loader from 'react-loader-spinner';\nimport { usePromiseTracker } from \"react-promise-tracker\";\n\nconst LoadingIndicator = props => {\n    const { promiseInProgress } = usePromiseTracker();\n    return (\n        promiseInProgress &&\n\n        <div\n            style={{\n                width: \"100%\",\n                height: \"100\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n            }}\n            >\n            <Loader type=\"Circles\" color=\"#ffffff\" height={100} width={100}/>\n        </div>\n    )\n}\n\nexport default LoadingIndicator;","import React, { Component } from 'react';\nimport '../styling/css/input.css';\nimport LoadingIndicator from './LoadingIndicator';\n\nexport default class Input extends Component {\n    constructor(props){\n        super(props);\n        this.sendImage = this.sendImage.bind(this);\n        this.onImageChange = this.onImageChange.bind(this);\n        this.state = {\n            buttonText: 'Upload an Image',\n            isUp: false,\n            isLoading:false\n        }\n    }\n    \n    onImageChange = (event) => {\n        if (event.target.files && event.target.files[0]) {\n          let reader = new FileReader();\n          reader.onload = (e) => {\n            this.setState({\n                image: e.target.result,\n                buttonText: 'Recognize Plate',\n                isUp: true,\n                isLoading: false\n            });\n          };\n          reader.readAsDataURL(event.target.files[0]);\n        }\n    }\n\n    sendImage = (e) => {\n        this.props.hitAPIfunc(this.state.image)\n        this.setState({\n            isLoading: true\n        })\n    }\n\n    \n    render() {\n        return (\n            <div>\n                {this.state.isLoading\n                ?\n                    <div>\n                        <LoadingIndicator /><br />\n                        <p style={{ fontSize: '1.3rem', color: '#ffffff' }}>This may take a few seconds, depending on image size. Please wait.</p>\n                    </div>\n                :\n                    this.state.isUp\n                        ?  \n                            <div>\n                                <div className=\"upload-btn-wrapper\">\n                                    <button type=\"submit\" onClick={this.sendImage} className=\"ubtn\">\n                                        {this.state.buttonText}\n                                    </button>\n                                </div>\n                                <div>\n                                    <img id=\"target\" style={{\n                                            maxHeight:'50vh', \n                                            maxWidth:'80vw',\n                                            minxHeight:'15vh', \n                                            minWidth:'15vw'}} \n                                        src={this.state.image}/>\n                                </div>\n                            </div>\n                        :\n                            <div className=\"upload-btn-wrapper\">\n                                <button type=\"button\" className=\"ubtn\">\n                                    {this.state.buttonText}\n                                    <input type=\"file\" onChange={this.onImageChange}\n                                    className=\"filetype\" id=\"group_image\" accept=\"image/*\" \n                                />\n                                </button>\n                            </div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport '../styling/css/output.css'\n\nexport default class Output extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            /* imstr: this.props.imstrProp, */\n            status: this.props.statusProp,\n            detections: this.props.detectionsProp\n        }\n        console.log(\"API response received: \"+this.state.detections)\n    }\n\n    render() {\n        return (\n            <div>\n{/*                 <div>\n                    <p style={{ color:'#fff', fontSize:'1rem' }}>\n                        <a href={`data:image/jpeg;base64,${this.state.imstr}`} download='image_after_detection.jpg'>\n                            Download This Image\n                        </a>\n                    </p>\n                </div> */}\n{/*                 <div>\n                    <img className=\"mycss-o-img\" src={`data:image/jpeg;base64,${this.state.imstr}`}></img>\n                </div> */}\n                <div>\n                     <ul className='mycss-list'>\n                        {this.state.detections.length\n                        ?\n                            /* this.state.detections.map((value, index) => {\n                                return  <li key={index}>\n                                            {value.object} - {value.probability.toFixed(2)}%\n                                        </li>\n                            }) */\n                            <h1 style={{ color: '#ffffff' }}>The Plate:  {this.state.detections}</h1>\n                        :\n                            <div>\n                                <p style={{ color:'#fff !important ', fontSize:'1rem' }}>\n                                    Couldn't recognize the plate.\n                                </p>\n                            </div>\n                        }\n                    </ul>\n                </div>\n                <div>\n                    <p style={{ color:'#323235 !important ', fontSize:'1rem' }}>\n                        <a href='/'>\n                            Try Another Image\n                        </a>\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Input from '../components/Input';\nimport config from '../config/config';\nimport axios from 'axios';\nimport Output from './Output';\n\nimport { trackPromise } from 'react-promise-tracker';\n\nexport default class DispArea extends Component {\n    constructor(props){\n        super(props);\n        this.hitAPI = this.hitAPI.bind(this);\n        this.stringAdjust = this.stringAdjust.bind(this);\n        this.state = {\n            inputTaken: false\n        }\n    }\n\n    componentDidMount() {\n        axios.get(config.apiAddress,\n/*             {\n                mode: 'cors'\n            },\n            { headers: {\n                'Access-Control-Allow-Origin': '*',\n                \"Access-Control-Allow-Headers\": \"*\"\n            }}     */\n        )\n        .then(res => {\n            if(res.status === 200){\n                console.log('Server Online!!')\n            }\n            else{\n                window.alert('Server temporarily offline for maintenance...')\n            }\n        }\n        ) \n    }\n    \n\n    stringAdjust(originalString){\n        var newString = originalString.split(',')[1]\n        return newString\n    }\n\n    hitAPI(chosenImage){\n        console.log(\"API hit!!\")\n        let apiFetchURL = config.apiAddress + 'predict';\n        chosenImage = this.stringAdjust(chosenImage)\n        \n        trackPromise(\n            axios.post(\n                apiFetchURL, \n                {\n                    \"chosenImage\": chosenImage\n                },\n/*                  {\n                    mode: 'cors'\n                },\n                { headers: {\n                     \"Access-Control-Allow-Origin\": \"*\",\n                     \"Access-Control-Allow-Headers\": \"*\"\n                }} */\n            ).then(res => {\n                    this.setState({\n                        inputTaken: true,\n                        detectedImage: res.data.imstr,\n                        status: res.data.success,\n                        detections: res.data.detections\n                    })                \n                }\n            ).catch(err => {\n                    window.alert(\"Server is too busy right now or file is too big for it to handle. Please try again later.\" + err)\n                    this.setState({\n                        serverErr: true\n                    })\n                }\n            )\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"mycss-disp\">        \n                <div id=\"mycss-area\">\n                    {this.state.serverErr\n                    ?\n                        <p><a href=\"/\">Retry</a></p>\n                    :\n                        this.state.inputTaken\n                        ?\n                            <Output \n                                imstrProp={this.state.detectedImage} \n                                statusProp={this.state.status}\n                                detectionsProp={this.state.detections}\n                            />\n                        :   \n                            <div>\n                                <Input hitAPIfunc={this.hitAPI} />\n                            </div>\n                        }\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n","import React from 'react';\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport DispArea from './components/DispArea.js';\n\nimport './styling/css/icomoon.css';\n//import './styling/css/bootstrap.css';\nimport './styling/fonts/flaticon/font/flaticon.css';\nimport './styling/css/style.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"main\">\n        <Sidebar />\n        <DispArea />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}